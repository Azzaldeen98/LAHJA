@using LAHJA.Data.UI.Components.Payment.BillingContact
@using LAHJA.UI.Components.Payment.CreditCard
 




<MudText Typo="Typo.h6" Class="mb-4"> Payment information</MudText>
@if (@billingContact == null)
{
    <div class="mx-auto">
        @if (@billingContact == null){}
        <MudExpansionPanels>
            <MudExpansionPanel @bind-Expanded="@open" HideIcon="true">
                <TitleContent>
                    <div class="d-flex">

                        <MudAlert Severity="Severity.Warning" Variant="Variant.Outlined">
                            The reactor temperature exceeds the optimal range
                                + Billing  Method
                        </MudAlert>
                        <MudIcon Icon="@(open ? Icons.Material.Filled.Close : Icons.Material.Filled.Add)" class="ml-auto"></MudIcon>
                    </div>
                </TitleContent>
                <ChildContent>

                    <FormBilling OnClickSave= "@OnclickCreate" />

                </ChildContent>
            </MudExpansionPanel>
        </MudExpansionPanels>
    </div>








   

}
else
{


  

     <MudExpansionPanels>
         <MudExpansionPanel @bind-Expanded="@open" HideIcon="true">
             <TitleContent>
                 <MudText Typo="Typo.h6" Class="font-weight-bold">Billing Information</MudText>
            
                 <MudPaper Class="p-4 mb-4 shadow-md rounded-lg" Elevation="3">
                     <MudText Class="mb-2"><strong>Name:</strong> @billingContact.FullName</MudText>
                     <MudText Class="mb-2"><strong>Country:</strong> @billingContact.Country</MudText>
                     <MudText Class="mb-2"><strong>City:</strong> @billingContact.City</MudText>
                     <MudText Class="mb-2"><strong>Phone Number:</strong> @billingContact.MobilePhoneNumber</MudText>
                     <MudText Class="mb-2"><strong>Address1:</strong> @billingContact.Address1</MudText>

                     @if (!string.IsNullOrEmpty(billingContact.Address2))
                     {
                         <MudText Class="mb-2"><strong>Address2:</strong> @billingContact.Address2</MudText>
                     }

                     <div class="d-flex justify-end mt-3">
                         <MudButton Variant="Variant.Outlined" Color="Color.Error" StartIcon="Icons.Material.Filled.Delete" Class="px-4 py-2">Remove</MudButton>
                     </div>
                 </MudPaper>

                 <MudIcon Icon="@(open ? Icons.Material.Filled.Close : Icons.Material.Filled.Edit)" class="ml-auto" />
            </TitleContent>

             <ChildContent>
                 <FormBilling OnClickSave="@OnclickCreate" />
             </ChildContent>
         </MudExpansionPanel>
     </MudExpansionPanels> 

   










 


}


@code

{
    bool open;


    private bool flag = true;
    private BillingContact billingContact = null;



    [Parameter] public BillingContact BilledData { get => billingContact; set => billingContact = value; }
    [Parameter] public EventCallback<BillingContact> OnSelect { get; set; }
    protected override async Task OnInitializedAsync()
    {

       @*  try
        {
            BillingContactt(billingContact);
        }
        catch(Exception ex)
        {
            
        } *@

    }
    private void Tabb()
    {
        flag = false;
        StateHasChanged();
    }

    private async void  Cancle(bool _flag)
    {
        flag = true;
        StateHasChanged();


    }
    private async void BillingContactt(BillingContact billingContact)
    {
        try
        {
            if (OnSelect.HasDelegate)
            {

                await OnSelect.InvokeAsync(billingContact);
            }
        }
        catch
        {

        }

    }

    private async  void  OnclickCreate(BillingContact _billingContact)
    {
        try
        {
            billingContact = _billingContact;
            BillingContactt(billingContact);

            StateHasChanged();

        }
        catch(Exception ex)
        {
            
        }
    }

}
