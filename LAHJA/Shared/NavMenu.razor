@using LAHJA.Them
@inject NavigationManager NavigationManager

 @if (_isLogin){ 
<MudNavMenu Class="mt-4">
        <MudNavLink Icon="@Icons.Material.Filled.Dashboard" Match="NavLinkMatch.All" Href="/settings">Dashboard</MudNavLink>
        <MudNavLink Icon="@Icons.Material.Filled.Storage" Href="/services" OnClick="NavigateOnlyToHome">Servers</MudNavLink>
    <MudNavLink Icon="@Icons.Material.Filled.AccountBalance" Href="/billing" OnClick="NavigateOnlyToHome" >Billing</MudNavLink>
    <MudNavGroup Title="Settings" Expanded="true">
        <MudNavLink Icon="@Icons.Material.Filled.People" Href="/dummy" OnClick="NavigateOnlyToHome">Users</MudNavLink>
        <MudNavLink Icon="@Icons.Material.Filled.Security" Href="/dummy" OnClick="NavigateOnlyToHome">Security</MudNavLink>
    </MudNavGroup>
    <MudNavLink Href="/dummy" OnClick="NavigateOnlyToHome">About</MudNavLink>

    <MudNavLink>
       <MudButton Variant="Variant.Filled" class="@AppTextStyle.TEXT_TRANSFORM_NORMAL" StartIcon="@Icons.Material.Filled.Logout" 
        OnClick="OnLogOut">Logout</MudButton>
    </MudNavLink>

</MudNavMenu>
 }

@code {

    [Parameter] public EventCallback SubmitLogOut { get; set; }
    [Parameter] public bool IsLogin { set { 
            _isLogin = value;
            StateHasChanged(); } }


    private bool _isLogin = false;

    private void NavigateOnlyToHome() => NavigationManager.NavigateTo("/");

    private  void OnLogOut()
    {

        if (SubmitLogOut.HasDelegate)
            SubmitLogOut.InvokeAsync();

    }

    protected override void OnInitialized()
    {
  


    }

} 